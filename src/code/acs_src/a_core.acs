// because linguist -*- mode: c;-*-

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * All Out War 2 core mechanism scripts
 * Credit to VoltlocK for originally creating the engine
 * With modifications by Eruanna, Dusk and the Omega Team
 *
 * You may use portions of this Script in your project as long as you give
 * credit where credit is due. Please don't be lame and just copy-paste any
 * of this and call it your own. Thanks!
 */

Script 999 OPEN
{
	delay(1);

	InitClasses();
	LoadResearchDefinitions();

	RankTitles[0] = "Private";
	RankTitles[1] = "Corporal";
	RankTitles[2] = "Sergeant";
	RankTitles[3] = "Master Sgt.";
	RankTitles[4] = "Officer";
	RankTitles[5] = "Lieutenant";
	RankTitles[6] = "Major";
	RankTitles[7] = "General";

	if (GetCVar("theta_disablemechs") == 0)
		ConsoleCommand("set theta_mechs 1");
	else
		ConsoleCommand("set theta_mechs 0");

	//Red
	GotRefinery[0] = True;
	GotBarracks[0] = True;
	GotFactory[0] = True;
	GotPlant[0] = True;
	GotRepair[0] = True;
	GotObelisk[0] = True;
	BaseLeft[0] = 5;
	//Blue
	GotRefinery[1] = True;
	GotBarracks[1] = True;
	GotFactory[1] = True;
	GotPlant[1] = True;
	GotRepair[1] = True;
	GotObelisk[1] = True;
	BaseLeft[1] = 5;

	if (GetCVAR("theta_tickets") <= 1 && TicketPool == False)
		ConsoleCommand("set theta_tickets 75");
	else if (GetCVAR("theta_tickets") <= 100 && TicketPool == True)
		ConsoleCommand("set theta_tickets 250");

	StartingTickets = GetCVAR("theta_tickets");

	Tickets[0] = StartingTickets;
	Tickets[1] = StartingTickets;
	TicketPool = GetCVAR("theta_ticketpool");

	SetLineSpecial(159, 80, 342, 0, 0, 0, 0);

	// Draw initial building HUD
	DrawBuildingHud();

	SpawnSpotForced("CrateMapMarker", TID_CRATE, 0, 0);
	SpawnSpotForced("TiberiumMapMarker", TID_TIBERIUM, 0, 0);
	SpawnSpotForced("TeslaCoilOrb", TID_TESLACOIL_EYE, 0, 0);

	// wf unavailability
	if (!ThingCount(T_NONE, TID_FACTORY_BLUE) && !ThingCount(T_NONE, TID_FACTORY_RED))
	{
		GotFactory[TEAM_BLUE] = 0;
		GotFactory[TEAM_RED] = 0;
		BaseLeft[TEAM_BLUE]--;
		BaseLeft[TEAM_RED]--;
	}

	ACS_ExecuteAlways(930, 0, BUILDING_ALL, TEAM_RED);
	ACS_ExecuteAlways(930, 0, BUILDING_ALL, TEAM_BLUE);

	// [Dusk] If ticket pool is enabled, spawn ticket counters. These counters
	// are used to inform clients about ticket values, since the left-hand
	// hud is client-sided. "Physically", the ticket counters are map spots
	// spawned at the respective team's Repair Facilities. The counters'
	// angle tells the starting ticket amount, their speed tells the current
	// ticket amount.
	SpawnSpotForced("MapSpot", 109, TID_TICKETCOUNTER_BLUE, 0);
	SpawnSpotForced("MapSpot", 209, TID_TICKETCOUNTER_RED, 0);
	SetActorAngle(TID_TICKETCOUNTER_BLUE, StartingTickets);
	SetActorAngle(TID_TICKETCOUNTER_RED, StartingTickets);

	if (TicketPool)
	{
		SetActorSpeed(TID_TICKETCOUNTER_BLUE, StartingTickets);
		SetActorSpeed(TID_TICKETCOUNTER_RED, StartingTickets);
	}
	else
	{
		SetActorSpeed(TID_TICKETCOUNTER_BLUE, 0);
		SetActorSpeed(TID_TICKETCOUNTER_RED, 0);
	}

	// [ZB] Idiot proofing
	/*
	while (true)
	{
		IdiotProofCvar("fraglimit", 0, 0);
		IdiotProofCvar("winlimit", 0, 0);
		IdiotProofCvar("duellimit", 0, 0);
		if (GetCVar("timelimit") > 0)
			if (GetCVar("timelimit") < GetCVar("theta_suddendeathtime"))
				ConsoleCommand(StrParam(s: "timelimit ", d: GetCVar("theta_suddendeathtime") + 15));
		delay(1);
	}
	*/
}

// Server settings
Script 599 OPEN
{
	delay(1);

	// ==================================
	// DMFLAGS
	if (!GetCVAR("sv_doubleammo")) ConsoleCommand("sv_doubleammo 1");

	if (!GetCVAR("sv_nofov")) ConsoleCommand("sv_nofov 1");

	if (!GetCVAR("alwaysapplydmflags")) ConsoleCommand("alwaysapplydmflags 1");

	if (!GetCVAR("sv_weapondrop")) ConsoleCommand("sv_weapondrop 1");

	if (!GetCVAR("sv_itemrespawn")) ConsoleCommand("sv_itemrespawn 1");

	if (!GetCVAR("compat_limited_airmovement")) ConsoleCommand("compat_limited_airmovement 1");

	if (!GetCVAR("compat_clientssendfullbuttoninfo")) ConsoleCommand("compat_clientssendfullbuttoninfo 1");

	if (GetCVAR("sv_nocrouch")) ConsoleCommand("sv_nocrouch 0");
	if (GetCVAR("sv_nojump")) ConsoleCommand("sv_nojump 0");

	// [Dusk] enforce no pointlimit until game is considered over. Pointlimit is used
	// to end the game when needed. We don't want this Script to conflict it at any
	// given time.
	if (!GameOver && GetCVAR("pointlimit") != 0) ConsoleCommand("pointlimit 0");

	// ==================================
	// CUSTOM CVARS
	// w/ sanity checks
	if (GetCVAR("theta_greedkill") < 0) ConsoleCommand("set theta_greedkill 0");

	if (!GetCVAR("theta_creditlimit")) ConsoleCommand("set theta_creditlimit 10000");

	if (GetCVAR("theta_economy_mode") < 0) ConsoleCommand("set theta_economy_mode 0");

	if (GetCVAR("theta_economy_mode") > 1) ConsoleCommand("set theta_economy_mode 1");

	if (GetCVAR("theta_harvestbonus") <= 0) ConsoleCommand("set theta_harvestbonus 10");

	if (GetCVAR("theta_enharvestbonus") <= 0) ConsoleCommand("set theta_enharvestbonus 20");

	if (GetCVAR("theta_harvestbonusadv") <= 0) ConsoleCommand("set theta_harvestbonusadv 25");

	if (GetCVAR("theta_enharvestbonusadv") <= 0) ConsoleCommand("set theta_enharvestbonusadv 50");

	if (!GetCVAR("theta_credflow")) ConsoleCommand("set theta_credflow 4");

	if (GetCVAR("theta_startcredits") <= 0) ConsoleCommand("set theta_startcredits 300");

	if (GetCVAR("theta_creditfrag") <= 0) ConsoleCommand("set theta_creditfrag 50");

	if (GetCVAR("theta_bonusamount") <= 0) ConsoleCommand("set theta_bonusamount 300");

	if (GetCVAR("theta_bonustime") <= 0) ConsoleCommand("set theta_bonustime 5");

	if (GetCVAR("theta_medicbonusneed") <= 0) ConsoleCommand("set theta_medicbonusneed 175");

	if (GetCVAR("theta_repairbonus") <= 0) ConsoleCommand("set theta_repairbonus 1");

	if (GetCVAR("theta_guardianlimit") <= 0) ConsoleCommand("set theta_guardianlimit 2");

	if (GetCVAR("theta_ticketpool") <= 0) ConsoleCommand("set theta_ticketpool 0");

	//[SP]How long you can stay on a team before you are never switched.
	if (GetCVAR("theta_teamstaytime") <= 0) ConsoleCommand("set theta_teamstaytime 2");

	// Plasma Cannon initial delay
	if (!GetCVAR("theta_plasmapurchasedelay")) ConsoleCommand("set theta_plasmapurchasedelay 5");

	//[SP]Maximum number of plasma cannons per team. (Set to -1 for unlimited)
	if (!GetCVAR("theta_maxcannonsperteam")) ConsoleCommand("set theta_maxcannonsperteam 4");

	// [Dusk] Time (in minutes) to determine plasma cannon cooldown. Use -1 to disable
	if (!GetCVAR("theta_plasmacooldown")) ConsoleCommand("set theta_plasmacooldown 3");

	//[SP]How long you have to wait to buy a new superweapon beacon. (Minutes) (Set to -1 to disable wait)
	if (!GetCVAR("theta_beaconpurchasedelay"))ConsoleCommand("set theta_beaconpurchasedelay 5");

	// [SP]Maximum number of time cops per team. (Set to -1 for unlimited)
	if (!GetCVAR("theta_maxtimecopsperteam")) ConsoleCommand("set theta_maxtimecopsperteam 1");

	//[SP] Time (in minutes) before sudden death.
	// [Dusk] changed default to 45, -1 means immediate
	if (GetCVAR("theta_suddendeathtime") == 0) ConsoleCommand("set theta_suddendeathtime 45");

	if (GetCVAR("theta_disablemechs") <= 0) ConsoleCommand("set theta_disablemechs 0");

	if (GetCVAR("theta_surrendermode") <= 0) ConsoleCommand("set theta_surrendermode 0");

	// [Dusk] How much score does destroying a building award you, in addition to difference?
	if (GetCVAR("theta_buildingpoints") <= 0)
		ConsoleCommand("set theta_buildingpoints 125");

	// [Dusk] How long does the obelisk take to restore fully? Seconds, -1 for instant
	if (GetCVAR("theta_obeliskrestoredelay") == 0)
		ConsoleCommand("set theta_obeliskrestoredelay 450");

	delay(35 * 5);
	restart;
}

//Setting Player scripts
Script 10 RESPAWN
{
	// [ZB] don't execute if we're the server
	if (PlayerNumber() == -1)
		terminate;

	Delay(1);
	
	DebugLog(StrParam(s: "Player respawned. Their team is ", s: cond(PlayerTeam() == TEAM_RED, "Red", "Blue")));
	if (StartTime[PlayerNumber()] == 0)
		InitPlayer();

	GiveInventory("Ingame", 1);
	GiveInventory("IsInSpawnRoom", 1);
	SetInventory("IsBlue", PlayerTeam() == TEAM_BLUE);
	SetInventory("IsRed", PlayerTeam() == TEAM_RED);
	Thing_ChangeTID(0, PlayerNumber() + TID_Player);

	if (GetPlayerInfo(PlayerNumber(), PLAYERINFO_GENDER) == 1)
	{
		SetActorProperty(0, APROP_DeathSound, "female/death");
		GiveInventory("IsFemale", 1);
	}

	ACS_ExecuteAlways(97, 0);
	SetWeapon("Unarmed");
}

Script 11 ENTER
{
	// [ZB] We give this now, so team balance works right.
	GiveInventory("IsInSpawnRoom", 1);
	// [Dusk] This player's joining might throw off team balance, so check that now.
	CheckTeamBalance();

	delay(5);
	InitPlayer();

	GiveInventory("Ingame", 1);
	SetInventory("IsBlue", PlayerTeam() == TEAM_BLUE);
	SetInventory("IsRed", PlayerTeam() == TEAM_RED);
	Thing_ChangeTID(0, PlayerNumber() + TID_Player);

	if (GetPlayerInfo(PlayerNumber(), PLAYERINFO_GENDER) == 1)
	{
		SetActorProperty(0, APROP_DeathSound, "female/death");
		GiveInventory("IsFemale", 1);
	}

	delay(5);
	ShowStatus(PlayerNumber()); // display credits/exp HUD
	ACS_ExecuteAlways(92, 0);
}

//--------------------------START UP MESSAGES
Script 301 ENTER CLIENTSIDE
{
	SetFont("BIGFONT");
	HudMessage(s: "Welcome to \cFAll Out War 2!";
				HUDMSG_FADEINOUT, HID_ENTER, CR_WHITE, 0.5, 0.3, 7.0, 0.5, 1.0);

	if (GetCVar("vid_renderer") == 0)
		HudMessage(s: "\cdTheta\cf is best played in \cdOpenGL\cf.";
					HUDMSG_FADEINOUT, HID_ENTER + 2, CR_GOLD, 0.5, 0.6, 7.0);

	SetFont("SMALLFONT");
	HudMessage(s: "\cfYou are playing \cdThe Theta Project\cf version \cd", s: VERSION_STRING, s: "\cf (commit \cd", s: COMMIT_HASH, s:"\cf)!\n",
				s: "\cfJoin the \cd#theta\cf channel on \cdZandronum IRC\cf!\n",
				s: "\cfDeveloped by \c[c9]S\c[c1]e\c[c9]a\c[c1]n\cf and \cdProtox\cf.",
				s: "\n\n",
				s: "See \cFOptions \cN-> \cFCustomise Controls\c- for keybinds";
				HUDMSG_FADEOUT, HID_ENTER + 1, CR_WHITE, 0.5, 0.5, 7.0, 1.0);

	delay(20);
	LocalAmbientSound("voltlock/welcome", 127);
}

Script 8 (int Gone) DISCONNECT
{
	IsAdmin[gone] = false;
	Experience[gone] = 0;
	Rank[gone] = RANK_PRIVATE;
	Surrender[gone] = 0;
	PlasmaCooldown[gone] = 0;
	StartTime[gone] = 0;

	for (int i = 0; i < 2; ++i)
		if (MechGetter[i] == Gone && GettingMech[i])
			GettingMech[i] = 0;

	if (Surrender[gone])
	{
		Surrender[gone] = false;

		int t = PlayersTeam[gone];
		IntelMessageBold(StrParam(s: "\cD", d: SurrenderCount(t), s: " \cQof\cD ",
								d: GetTeamProperty(t, TPROP_NumPlayers), s: "\cJ of ",
								s: GetTeamProperty(t, TPROP_TextColor), s: TeamNames[t],
								s: "\n have voted to surrender."));
	}
	else // % of players surrendering could now be higher. Al demands a recount!
		ACS_Execute(751, 0);

	// Check teams for possible imbalance
	CheckTeamBalance();
}

Script 303 OPEN
{
	// these maps are too small to have portals
	delay(5);
	int levelnum = GetLevelInfo(LEVELINFO_LEVELNUM);

	if (levelnum ==  2) UsePortals = 0;

	if (levelnum ==  4) UsePortals = 0;

	if (levelnum ==  7) UsePortals = 0;

	if (levelnum == 15) UsePortals = 0;
}

function void InitPlayer(void)
{
	SetCredits(PlayerNumber(), GetCVAR("theta_startcredits"));
	Experience[PlayerNumber()] = 0;
	Rank[PlayerNumber()] = RANK_PRIVATE;
	Surrender[PlayerNumber()] = False;
	PlayersTeam[PlayerNumber() + 1] = PlayerTeam();
	StartTime[PlayerNumber()] = Timer();
	HasTeleported[PlayerNumber()] = false;
	RepairBonus[PlayerNumber()] = 0;
	MedicBonus[PlayerNumber()] = 0;
}
