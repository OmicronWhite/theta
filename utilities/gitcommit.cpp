#include <string>
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <fstream>

#ifndef __cplusplus
# error "Please use C++ to compile this tool."
#endif

#define LANG_UNKNOWN    -1
#define LANG_CLIKE      0
#define LANG_BATCH      1

using std::string;
using std::ofstream;

string exec (char* cmd);
string exec (char* cmd)
{
    string result = "";

#ifdef _MSC_VER
    FILE* pipe = _popen(cmd, "r");
#else
    FILE* pipe = popen(cmd, "r");
#endif

    if (!pipe)
    {
        printf("Could not start process '%s' for some reason. Exiting.", cmd);
        exit(1);
        return "BAD";
    }

    char buffer[128];

    while (!feof(pipe))
    	if (fgets(buffer, 128, pipe) != NULL)
    		result += buffer;

#ifdef _MSC_VER
    _pclose(pipe);
#else
	pclose(pipe);
#endif
    return result;
}

int main (int argc, char *argv[])
{
    int language = -1;
    string comment = "";
	bool silent = false;

	if (argc != 3 + 1)
	{
		string thirdArg = string(argv[3]);
		silent = (thirdArg == "-s" || thirdArg == "--silent");
	}

	if (!silent) printf("Theta Git commit tool, by Sean\n");

    if (argc != 2 + 1 || argc != 3 + 1)
    {
        printf("Expected two arguments.\n");
        printf("Syntax: gitcommit <language: c | batch> <output file>\n");
		printf("Got %d arguments instead.\n", argc);
		for (int i = 0; i < argc; i++)
		{
			printf("Argument %d: %s\n", i, argv[i]);
		}
        return 1;
    }

	if (string(argv[1]) == "c")
	{
		language = LANG_CLIKE; 
		comment = "//";
	}
	else if (string(argv[1]) == "batch")
	{
		language = LANG_BATCH; 
		comment = "::";
	}
    else
    {
        language = LANG_UNKNOWN;
        printf("Unknown language '%s'.\n", argv[1]);
        printf("Please note that the language parameter is case sensitive.\n");
		return 2;
    }

    string commit = exec("git log -1 --pretty=format:%h"); 

    if (!silent) printf("Commit: %s\n", commit);

	ofstream fstr;
	if (!silent) printf("Opening file.\n");
	fstr.open(string(argv[2]));
	if (!silent) printf("Writing disclaimer.\n");
	fstr << comment << " This file was generated by gitcommit.\n";
	fstr << comment << " Please don't modify this file.\n";

	if (!silent) printf("Writing Git information.\n");
	if (language == LANG_CLIKE)
		fstr << "#define COMMIT_HASH \"" << commit << "\"\n";
	else if (language == LANG_BATCH)
		fstr << "SET COMMIT_HASH=" << commit << "\n";

	if (!silent) printf("Closing file.\n");
	fstr.close();
	return 0;
}
