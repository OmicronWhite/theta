// All Out War 2 Research purchase function
// Credit to VoltlocK for originally creating the engine
// With modifications by Eruanna, Dusk, the Omega Team, and the Theta Team

// You may use portions of this script in your project as long as you give credit where credit is
// due. Please don't be lame and just copy-paste any of this and call it your own. Thanks!
// [Dusk] Rewritten pretty much entirely

// Research Centre Upgrades
// Here is definied all data thats used in research centre

// Barracks Upgrades: Cost 1750
// Intense Training - Increases all XP reward by 100-200%.
script 20 ( void )
{
	int cost = 1750;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_INTENSE_TRAINING) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Intense Training----
			\n\n\ciCost: \cf$1750
			\n\ciPurpose: \cdIncreases XP rewards
			\n\tby objectives done.
			\n\cd--- Your team will earn more XP \cnmax:200%.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqIntense Training\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_INTENSE_TRAINING);
}

// Arsenal Recycler - Sold weapons gives you back double the sale value, also in resing.
script 21 ( void )
{
	int cost = 1750;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_ARSENAL_RECYCLER) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Arsenal Recycler----
			\n\n\ciCost: \cf$1750
			\n\ciPurpose: \cdBarracks now Recycle your sold
			\n\tweapons.
			\n\cd--- More money is given back when resigning\n    or selling.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqArsenal Recycler\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_ARSENAL_RECYCLER);
}

// Arsenal Upgrade - Barracks terminal allow you to buy advanced armor and weapons.
script 22 ( void )
{
	int cost = 1750;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_ARSENAL_UPGRADE) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Alsenal Upgrade----
			\n\n\ciCost: \cf$1750
			\n\ciPurpose: \cdBarracks now produces better
			\n\tweapons and armos to be buy.
			\n\cd--- Barracks terminal now has everything\n    avaliable.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqAlsenal Upgrade\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_ARSENAL_UPGRADE);
}

// Refinary Upgrades: Cost 2000
// Tiberium Purification  - Refining Tiberium awards an additional 125 credits.
script 23 ( void )
{
	int cost = 2000;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_TIBERIUM_PURIFICATION) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Tiberium Purification----
			\n\n\ciCost: \cf$2000
			\n\ciPurpose: \cdRefinary clean and produce a
			\n\tbetter use of tiberium.
			\n\cd--- Refining gives you more \cf$125 \ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqTiberium Purification\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_TIBERIUM_PURIFICATION);
}

// Enhanced Processing - Refining Tiberium awards teammates an additional 50 credits.
script 24 ( void )
{
	int cost = 2000;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_ENHANCED_PROCESSING) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Enhanced Processing----
			\n\n\ciCost: \cf$2000
			\n\ciPurpose: \cdGives to refinary better pumping
			\n\ttecnology increasing the production.
			\n\cd--- Refining gives to your team more $75 \ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqEnhanced Processing\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_ENHANCED_PROCESSING);
}

// Advanced Refinery - Increases refinery credits production by 1.
script 25( void )
{
	int cost = 2000;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_ADVANCED_REFINARY) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Advanced Refinery----
			\n\n\ciCost: \cf$2000
			\n\ciPurpose: \cdUpgrade refinary credits
			\n\tproduction.
			\n\cd--- Refining production increase by $1 \ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqImproved Pumps\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_ADVANCED_REFINARY);
}

// Research Centre Upgrades: Cost 2500
// Advanced Generators - Decrease the cost of power based class in 10%.
script 26( void )
{
	int cost = 2500;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_ADVANCED_GENERATORS) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Advanced Generators----
			\n\n\ciCost: \cf$2500
			\n\ciPurpose: \cdCause Research Centre
			\n\tto produce a costless energy power.
			\n\cd--- RC classes price decrease by 10% \ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqAdvanced Generators\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_ADVANCED_GENERATORS);
}

// Obelisk Overdrive - Increase the damage of obelisk by 10 vs marines and 100 vs mechs.
script 27( void )
{
	int cost = 2500;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_OBELISK_OUVERDRIVER) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Obelisk Overdrive----
			\n\n\ciCost: \cf$2500
			\n\ciPurpose: \cdOuverpower oblisk by
			\n\tadding more charge in shots.
			\n\cd--- Increase obleisk damage.\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqObelisk Overdrive\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_OBELISK_OUVERDRIVER);
}

// Reserve Accumulators - If the barracks get destroyed, power based classes are still avaliable.
script 28( void )
{
	int cost = 2500;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_RESERVE_ACCUMULATORS) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Reserve Accumulators----
			\n\n\ciCost: \cf$2500
			\n\ciPurpose: \cdIf barracks is destroyed
			\n\tRC is going to produce energy guns.
			\n\cd--- Power classes avaliable whitout BAR.\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqReserve Accumulators\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_RESERVE_ACCUMULATORS);
}

// War Factory Upgrades: Cost 2200 each
// Advanced Mechs - Enables the production of advanced mechs.
script 29( void )
{
	int cost = 2200;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_ADVANCED_MECHS) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Advanced Mechs----
			\n\n\ciCost: \cf$2200
			\n\ciPurpose: \cd-----
			\n\t-----
			\n\cd--- -----\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqAdvanced Mechs\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_ADVANCED_MECHS);
}

// Mass Production - Decreases the cost of mechs by 200 credits.
script 30( void )
{
	int cost = 2200;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_MASS_PRODUCTION) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Mass Production----
			\n\n\ciCost: \cf$2200
			\n\ciPurpose: \cdImproved mass-production
			\n\ttechnology allows for
			\n\tcheaper mech purchases.
			\n\cd--- -----\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqMass Production\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_MASS_PRODUCTION);
}

// Compact Warheads - Increase guardian max nukes to 3.
script 31( void )
{
	int cost = 2200;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_COMPACT_WARHEADS) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Compact Warheads----
			\n\n\ciCost: \cf$2200
			\n\ciPurpose: \cdImproved warheads allow for smaller
			\n\tpayloads with equal explosive potential.
			\n\cd--- Guardian may carry 3 nukes.\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqCompact Warheads\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_COMPACT_WARHEADS);
}

// Turrets Upgrades: Cost 2100 each
// Advanced Turrets - Allows construction of advanced turrets.
script 33( void )
{
	int cost = 2100;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_ADVANCED_TURRETS) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Advanced Turrets----
			\n\n\ciCost: \cf$2100
			\n\ciPurpose: \cd-----
			\n\t-----
			\n\cd--- -----\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqAdvanced Turrets\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_ADVANCED_TURRETS);
}

// Extra power - Increase turrets slots by 12.
script 34( void )
{
	int cost = 2100;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_EXTRA_POWER) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Advanced Turrets----
			\n\n\ciCost: \cf$2100
			\n\ciPurpose: \cd-----
			\n\t-----
			\n\cd--- -----\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqExtra Power\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_EXTRA_POWER);
}

// Turret optimization - Decrease advanced turrets slot cost by 1.
script 35( void )
{
	int cost = 2100;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_TURRET_OPTIMIZATION) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Turret optimization----
			\n\n\ciCost: \cf$2100
			\n\ciPurpose: \cdOptimized turret power usage allows for less costly advanced turrets
			\n\tless costly advanced turrets.
			\n\cd--- -----\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqTurret optimization\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_TURRET_OPTIMIZATION);
}

// Caches Upgrades: Cost 1900 each
// Health Cache - Slowly regenerates the HP of your team.
script 36( void )
{
	int cost = 1900;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_HEALTH_CACHE) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Health Cache----
			\n\n\ciCost: \cf$1900
			\n\ciPurpose: \cd-----
			\n\t-----
			\n\cd--- -----\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqHealth Cache\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_HEALTH_CACHE);
}

// Ammo Cache - Slowly regenerates the ammo of your team.
script 38 ( void )
{
	int cost = 1900;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_AMMO_CACHE) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Ammo Cache----
			\n\n\ciCost: \cf$1900
			\n\ciPurpose: \cd-----
			\n\t-----
			\n\cd--- -----\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqAmmo Cache\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_AMMO_CACHE);
}

// Reinforced Caches - Give all caches (Global) + 10% resistance.
script 39 ( void )
{
	int cost = 1900;

	if( MitigateDoublePress() ) terminate;
	if( GetResearchFlag(PlayerTeam(), TR_REINFORCED_CACHES) )
	{
		Error( "This has already been researched!" );
		terminate;
	}
	if( !CheckPlant( PlayerTeam() )) terminate;
	if( !CheckInventory( "PurchaseToken" ))
	{
	GiveInventory( "PurchaseToken", 1 );
	SetFont( "BIGFONT" );
	HudMessage( s: "
			\cd----Reinforced Caches----
			\n\n\ciCost: \cf$1900
			\n\ciPurpose: \cdImproved metal alloys allow
			\n\tfor more resilient caches.
			\n\cd--- -----\ci.";
	HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}
	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches \cqReinforced Caches\cd for ", s: TeamNames[PlayerTeam()] );
	SetResearchFlag(PlayerTeam(), TR_REINFORCED_CACHES);
}
